Expected files: *.c, *.h
Allowed functions: write, sqrtf, getline, fseek, fscanf, 
ferror, feof, fabsf, memcpy, fprintf, fclose, malloc, 
calloc, realloc, fnce (I'm not sure about this one),
fopen, errno, stderr, stdin, stdout

The first publication referring to this problem as the "traveling salesman problem" is 
found in the 1949 RAND Corporation report by Julice Robinson, "On the Hamiltonian
game (a travelling salesman problem)."

Here is how she defines the problem:
"The purpose of thus note is to give a method for solving a problem related to the travelling 
salesman problem. It seems worthwhile to give a description of the original problem. One 
formulation is to find the shoirtest route for a salesman starting from Washington, visiting 
all the state capitals and returning to Washington, more generally, to find the shortest closed 
curve containing n given points in the plane."

For example with the following set of cities:
0, 0
1, 0
2, 0
0, 1
1, 1
2, 1
1, 2
2, 2

which can be represented as follows:

+++
+++
 ++

the shortest path is:

┍-----┑
┕--┑  │
   ┕--┙

so you should print the lenght of this path that is:
8.00

Write a program that will read a set of city coordinates under the form '%f, %f' from the standard
input and will print the length of the shortest 
possible path containing all these cities under the form '%.2f'.

Your program will not be tested with more than 11 cities.

You will find in this directory a files tsp.c containing all the boring parts of this excercise and example
files to help you test your program.

For example this should work:
$> cat square.txt
1, 1
0, 1
1, 0
0, 0

$> ./tsp < square.txt | cat -e
4.00$
$>

